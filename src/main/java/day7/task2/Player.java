package day7.task2;
//Дворовый футбол.
//        Для игры в футбол во дворе требуется 6 человек (3х3). Класс Игрок (англ. Player), содержит следующие поля:
//        - поле “выносливость” (англ. stamina), разное для каждого экземпляра
//        - константы “максимальная выносливость” (англ. MAX_STAMINA) со значением 100
//        и “минимальная выносливость” (англ. MIN_STAMINA) со значением 0, единые для всех экземпляров
//        - статическое поле countPlayers, которое считает количество игроков на
//        футбольном поле (изначально их 0, выходом на поле считается создание
//        экземпляра класса, уходом - когда игрок устал).
//        - геттер для поля “выносливость”
//        и следующие методы:
//        run() - Игрок бежит при вызове этого метода. Этот метод уменьшает выносливость
//        на 1 при однократном вызове. Когда выносливость достигает 0, игроку нужен отдых и
//        он уходит с поля.
//        info() - выводит сообщение в зависимости от количества игроков на поле. Если
//        игроков меньше 6, то выводит сообщение: “Команды неполные. На поле еще есть ...
//        свободных мест”, иначе: “На поле нет свободных мест”. Грамматикой русского языка
//        пренебречь, т.е. фраза “еще есть 1 свободных мест” допустима.

//        Задание: Создать класс Player по вышеописанному шаблону. Экземпляр класса при
//        создании должен иметь значение выносливости от 90 до 100 (генерировать внутри
//        конструктора). Создать 6 игроков, вызвать метод info(). При попытке создать 7,8 …
//        n игрока, количество игроков на поле меняться не должно, проверить это.
//        Примените к игроку метод run(), пока он полностью не выдохнется (отрицательное
//        значение выносливости не допускается). Вывести количество игроков на поле.*По желанию: доработать метод info() так, чтобы при выводе в консоль грамматика
//        русского языка учитывалась.

import java.util.concurrent.ThreadLocalRandom;

public class Player {
    private int stamina;
    private final int MAX_STAMINA = 100;
    private final int MIN_STAMINA = 0;
    private static int countPlayers = 0;
    public int getCountPlayers(){
        return countPlayers;
    }
    public int getStamina(){
        return stamina;
    }
    public void run(){
        if (stamina > 0){
            stamina--;
        }
        else{
            countPlayers--;
        }
    }
    public void info(){
        switch (countPlayers){
            case 1:
                System.out.println("Команды неполные. На поле еще есть 5 свободных мест");
            case 2:
                System.out.println("Команды неполные. На поле еще есть 4 свободных места");
            case 3:
                System.out.println("Команды неполные. На поле еще есть 3 свободных места");
            case 4:
                System.out.println("Команды неполные. На поле еще есть 2 свободных места");
            case 5:
                System.out.println("Команды неполные. На поле еще есть 1 свободное место");
        }
        if (countPlayers > 5) {System.out.println("На поле нет свободных мест");}

    }
    public Player(){
        this.stamina = ThreadLocalRandom.current().nextInt(90, 100+1);
        if(countPlayers < 6){
            countPlayers++;
        }

    }
}
